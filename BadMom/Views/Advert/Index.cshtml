@using PagedList.Mvc
@model PagedList.IPagedList<BadMom.Models.Advert.AdvertVM>
@using BadMom.Models.Registration
@{
    ViewBag.Title = "Обьявления";
    Layout = "~/Views/Advert/_AdvertLayout.cshtml";
    ViewBag.Menu = "main";
}




<div class="container">
    <div class="advert-main">
        <div class="row">
            @{
                if (Model.Count > 0)
                {
                    foreach (var item in Model)
                    {
                        <div class="col-lg-6 advert-element">
                            <div class="d-flex justify-content-between">
                                <div class="photo">
                                    <a href="@Url.Action("ShowAdvert",new { id = item.Id })">
                                        @if (item.Photo != null && item.Photo.Length != 0)
                                        {
                                            var base64 = Convert.ToBase64String(item.Photo);
                                            var imgSrc = String.Format("data:image/gif;base64,{0}", base64);


                                            <img src="@imgSrc" class="img-fluid" />
                                        }
                                        else
                                        {<img src="~/Resources/nophoto.jpg" alt="..." class="img-fluid">}
                                    </a>
                                </div>
                                <div class="content-block">
                                    <div class="header">
                                        <a href="@Url.Action("ShowAdvert",new { id = item.Id })">@item.Title</a>
                                    </div>
                                    <div class="info-block">
                                        @if (item.UserName != User.Identity.Name)
                                        {
                                            @Html.ActionLink(@item.UserName, "UserInfo", "User", new { UserName = @item.UserName }, new { })
                                        }
                                        else
                                        {
                                            @Html.ActionLink(@item.UserName, "Index", "User", new { UserName = @item.UserName }, new { })
                                        }
                                        @item.Created.ToShortDateString()
                                    </div>
                                    <div class="body">
                                        @if (item.Body.Length > 100)
                                        {
                                            var body = item.Body.Substring(0, 100) + " ...";
                                            <text>@body</text>
                                        }
                                        else
                                        {
                                            @item.Body
                                        }
                                    </div>

                                </div>
                                <div class="d-sm-none d-flex justify-content-end align-content-end">
                                    <div class="price">
                                        @item.Price &#8372
                                    </div>
                                </div>
                                <div class="button-panel d-none d-sm-block">
                                    <button class="btn btn-default " onclick="window.location='@Url.Action("ShowAdvert",new { id = item.Id })'">Подробнее</button>
                                    @if (User.Identity.IsAuthenticated && User.Identity.Name == item.UserName)
                                    {
                                        <button class="btn btn-default saler" onclick="window.location='@Url.Action("EditAdvert",new { id = item.Id })'">Редактировать</button>
                                    }
                                    else
                                    {
                                        if (User.Identity.IsAuthenticated)
                                        {
                                            var id = string.Concat("favoriteButton", @item.Id);
                                            <div id="@id">
                                                @if ((ViewBag.User as UserData).FavoriteAdverts.Contains(item.Id))
                                                {
                                                    @Ajax.ActionLink("Убрать из избранного", "FromFavorite", new { advertId = item.Id, userId = (ViewBag.User as UserData).Id }, new AjaxOptions { UpdateTargetId = id }, new { @class = "btn btn-default not-favorite" });
                                                }
                                                else
                                                {
                                                    @*<button class="btn btn-default favorite" onclick="window.location='@Url.Action("ToFavorite", "Advert", new { id = Model.Id })'">В избранное</button>*@
                                                    @Ajax.ActionLink("В избранное", "ToFavorite", new { advertId = item.Id, userId = (ViewBag.User as UserData).Id }, new AjaxOptions { UpdateTargetId = id }, new { @class = "btn btn-default favorite" });
                                                }
                                            </div>
                                        }
                                    }

                                    @*<button class="btn btn-default favorite">В избранное</button>*@
                                    <div class="d-flex justify-content-end align-content-end">
                                        <div class="price">
                                            @item.Price &#8372
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <div class="col-12 no-message text-center">
                        По Вашему запросу ничего не найдено.
                    </div>

                }
            }
        </div>
    </div>



    <nav class="d-flex justify-content-center">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, themeId = ViewBag.ThemeId }))
    </nav>
</div>

